#ifndef HEADER_fd_src_disco_tiles_dedup_fd_dedup_tile_h
#define HEADER_fd_src_disco_tiles_dedup_fd_dedup_tile_h

/* fd_dedup provides services to deduplicate multiple streams of input
   fragments and present them to a mix of reliable and unreliable
   consumers as though they were generated by a single multi-stream
   producer.

   The dedup tile is simply a wrapper around the mux tile, that also
   checks the transaction signature field for duplicates and filters
   them out. */

#include "../../fd_disco_base.h"
#include "../../mux/fd_mux.h"

#define FD_DEDUP_TILE_ALIGN (128UL)

struct fd_dedup_tile_args {
  ulong tcache_depth;
};

typedef struct fd_dedup_tile_args fd_dedup_tile_args_t;

struct fd_dedup_tile_topo {
  ulong       in_cnt;
  fd_wksp_t * in_wksp[ 32 ];
  void *      in_dcache[ 32 ];
  ulong       in_mtu[ 32 ];

  fd_wksp_t * out_wksp;
  void *      out_dcache;
  ulong       out_mtu;
};

typedef struct fd_dedup_tile_topo fd_dedup_tile_topo_t;

/* fd_dedup_tile_in_t is a context object for each in (producer) mcache
   connected to the dedup tile. */

struct fd_dedup_tile_in {
  fd_wksp_t * mem;
  ulong       chunk0;
  ulong       wmark;
};

typedef struct fd_dedup_tile_in fd_dedup_tile_in_t;

/* fd_dedup_ctx_t is the context object provided to callbacks from the
   mux tile, and contains all state needed to progress the tile. */

struct __attribute__((aligned(FD_DEDUP_TILE_ALIGN))) fd_dedup_tile_private {
  ulong   tcache_depth;   /* == fd_tcache_depth( tcache ), depth of this dedups's tcache (const) */
  ulong   tcache_map_cnt; /* == fd_tcache_map_cnt( tcache ), number of slots to use for tcache map (const) */
  ulong * tcache_sync;    /* == fd_tcache_oldest_laddr( tcache ), local join to the oldest key in the tcache */
  ulong * tcache_ring;
  ulong * tcache_map;

  fd_dedup_tile_in_t in[ 32 ];

  fd_wksp_t * out_mem;
  ulong       out_chunk0;
  ulong       out_wmark;
  ulong       out_chunk;
};

typedef struct fd_dedup_tile_private fd_dedup_tile_t;

FD_PROTOTYPES_BEGIN

FD_FN_CONST ulong
fd_dedup_tile_align( void );

FD_FN_PURE ulong
fd_dedup_tile_footprint( fd_dedup_tile_args_t const * args );

ulong
fd_dedup_tile_seccomp_policy( void *               shdedup,
                              struct sock_filter * out,
                              ulong                out_cnt );

ulong
fd_dedup_tile_allowed_fds( void * shdedup,
                           int *  out,
                           ulong  out_cnt );

fd_dedup_tile_t *
fd_dedup_tile_join( void *                       shdedup,
                    fd_dedup_tile_args_t const * args,
                    fd_dedup_tile_topo_t const * topo );

void
fd_dedup_run( fd_dedup_tile_t *       ctx,
              fd_cnc_t *              cnc,
              ulong                   in_cnt,
              fd_frag_meta_t const ** in_mcache,
              ulong **                in_fseq,
              fd_frag_meta_t *        mcache,
              ulong                   out_cnt,
              ulong **                out_fseq );

FD_PROTOTYPES_END

#endif /* HEADER_fd_src_disco_fd_disco_tiles_dedup_fd_dedup_tile_h */
